# Default values for gen3kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
config_helper: "assets/config_helper.py"

#global tag for lables, etc
ENV: gen3k8dev
fence:
  serviceport: 80
  database:
    servername: "postgres-k8sgen3rmo.postgres.database.azure.com"
    username: "fence_gen3dev_user@postgres-k8sgen3rmo.postgres.database.azure.com"
    port: "5432"
    databasename: "fence_db"
    db_password: "b65a802fdf7a101c619e35354e791eeb"
  defaultIDPProvider: google
  enabledIDPProviders:
    - name: "google"
      loginButtonText: "Google Login"
    # - name: "microsoft"
    #   loginButtonText: "Microsoft Login"
    # - name: "okta"
    #   loginButtonText: "Okta Login"
  replicas: 1
#  image: "quay.io/cdis/fence:2020.12"
#  image: "rmolinger/fence:katie02"
  image: "dbedevreg.azurecr.io/fence:katie02"
  base_url: 'https://k8sgen3dev.optum.com/user'
  resources:
    limits:
      cpu: '500m'
      memory: '512Mi'
    requests:
      cpu: '500m'
      memory: '256Mi'
  googleOauth:
    client_id: '459263570125-3hl550dfsjej6v16m7go20i7ovkol8pn.apps.googleusercontent.com'
    client_secret: 'qxRkPreusEWF60lhM4-tH7O7'
  microsoftOauth:
    client_id: '9db77a3b-3f63-4093-a9e8-96a9d6cc711b'
    client_secret: 'a-7H-z1041Ki7T5_v6jtGi5vtRCTq-_D.I'
  oktaOauth:
    client_id: ""
  defaultLoginURLSuffix: 'login/google'
  amazonStorageCreds:
    - name: 'CREDS1'
      accesskeyid: 'stgaccvprh'
      secretkey: 'V6c8rNTDPxAozgf3M6ewHd+7A9XnTw8MNSfsQ63QLY1+nzloas6rSp0GsZuOK+Q+oT7gi5Cpdj8TEvqaC5xvOQ=='
    - name: 'CREDS2'
      accesskeyid: 'AKIAU2FCYYEUXZPLWKZF'
      secretkey: '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'
  amazonBuckets:
    - name: 'bucket1'
      credentialname: 'CREDS1'
      endpoint_url: 'https://minio-app-service-bfncrxya.azurewebsites.net'
      region: 'us-east-1'
    - name: 'gen3bucket88997'
      credentialname: 'CREDS2'
      region: 'us-east-1'
  azCredentials:
    - name: 'CREDA'
      az_stgacctname: 'stgacgen3devklnow'
      az_connection_string: 'DefaultEndpointsProtocol=https;AccountName=stgacgen3devklnow;AccountKey=KY0cSrSewNiDsYuRzw2jGBc8DWXmhee9vjP/bohCNbjfkrVzg2HkIJ1EKL8I3pfyiIBjzVozPMNx1PfSD8pG6Q==;EndpointSuffix=core.windows.net'
  azureBlobstores:
    - name: 'azgen3blobstorage'
      credentialname: 'CREDA'
  dataUploadBucket: 'azgen3blobstorage'
  adminUsers:
    - "randyolinger@gmail.com"
    - "rjwswenson@gmail.com"
    - "carlos.andrew.garcia@gmail.com"
    - "optumogs@gmail.com"
  regularUsers:
    - "randy.olinger@optum.com"
    - "carlos.garcia@optum.com"
  service:
    type: ClusterIP
    httpPort: 80
    httpsPort: 443
  cacrtFiles:
    - name: "olingerSigningCert.crt"
      fileLocation: "assets/olingerSigningCert.crt"
  jwt_private_key: |
    -----BEGIN PRIVATE KEY-----
    MIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDkS+nTVWUnXgIQ
    11LICu8p5XOOKk4XliZWcOef8ik5hC2nydh6BgUeMsP/8hUb9q+MpKrpnI0Q1itR
    rI17HNlF47uN7oMsMBEXUbOQt7dT6ACoKhXUKHHegXX6ILVVSPxJgzgO4U3LkK03
    DF8V0XtE0O7ireOaecyObl1S4I61gxyWGllyCnvQoRVHF07ZbPK46xQD9Hs9lyIq
    SVq/Y4K4qchY26g4ZQ78lpPCCF3sd4wwI9DIGOTigKLgI+G6MxUSRo3z8C452Djv
    4BFHBdrbu6fTmxn5WumdN1cjksA7cyUYCEQ/zr3bVlIPEi0C3TlM6J485VDl/e+z
    NZDxE+CrAgMBAAECggEBALjXFfy72WikXrvP+wBoife8BXGHoy7JrUSzqXYBFYuy
    D10YuiMiGKa4p6TlFl5Lvxr6gD8hN734CZ7ZPLv/QZOqrUJfaOkwCcZ9qgt0FATl
    hRKi8IWUMY3b9++K6AajT1Ed4xd5KAm3m+dEJwB9WXcAS0pRTETYdNylUv41PpaK
    h+MwyBBF5NSGnRYQuLpSqTD8jRfaXOzsfUXQmElgQ0ywTVEQPyoWHaB2CQzWdRbv
    ChwPBOfJHh4wsEO2C+sLTcQ0/DL4wC6yahF6iqnfBNR0bmcsl1696RkZ+ricEPY8
    8pbefY9Kp4GvFd2bFjJfArCY8OhqtqeniKjUeOkOJnECgYEA9h1bG+g6G2SJZFhN
    1fEpT5tO4r0RA4ZBnlPVIaxOcBLgJGMsTsN/Olse1so4Mm0gFiT17icoRRde5XKj
    DPp6E2PSyafQgLF48OpEFpDNJRcSUx+SPchO5XbXS0E1g41SSV1iUGX5l8z5ooHZ
    oRh3nDR5FpqFmrskGZGGzYSVVgcCgYEA7XdYPW1W92s3l8ixfZAQmIhFvHt9BP3t
    +rQQth4DF+RiGw+9VurVGbcmnuDBFD79whU1dv07vimaJhRwzkJsYRWY7GipQjfb
    eJiP3noAykji8QLBuXLMn1nC0zPgPDI+fw9kGG6BN47TwffqegnY3e34x+Z6niOu
    RPChgbwuVz0CgYEAn+7bsfrrJ7nhfo/TpN+elNi8HqP2Vm/8XELmEYfDQRlDBuJb
    fKOWHfnwxGuMsVgwrbM/DY/sn1lclYY1Zs2uXsNTyy9+UuMBUK0rqe5XIW8ovVOa
    2QM+IedkaMbrW52Oh5ZjuRNLatYMswnmvsUDlUKUHZg0kiRihSsIiq1JzikCgYEA
    pJtm8mW5tBaBWdjHmCdmKaXE2WusdOpkrbVmJCfXsxcgHmwhrn9oKsQ3pEhd7t/f
    XUsAXbQaVq5V6XGf5IpMwFuNPssqEPnRS95NVEW0CITPs4taqGd4ijlZgLfkBzY4
    9jDADOOE9PMvvLRSuDfdObG9Eyyj8L0BD07SVbERWm0CgYEA36QYn6P84onE9lQ8
    JpXhzhf/fdywKF1aXABhK5qhoGSHUxLiQ9G2VIXO4JYshZj0O0wa7nJctKgl0Hs5
    fv6xmI5lSSi/Mzcw5FwB+zd9XwjuCx7/TvE5Q4yzj30ihC2gmtDEE/X0Wcy+o2Dc
    D8OEKlWXGVIdG6KbKLcdbNoOFjo=
    -----END PRIVATE KEY-----
  jwt_public_key: |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5Evp01VlJ14CENdSyArv
    KeVzjipOF5YmVnDnn/IpOYQtp8nYegYFHjLD//IVG/avjKSq6ZyNENYrUayNexzZ
    ReO7je6DLDARF1GzkLe3U+gAqCoV1Chx3oF1+iC1VUj8SYM4DuFNy5CtNwxfFdF7
    RNDu4q3jmnnMjm5dUuCOtYMclhpZcgp70KEVRxdO2WzyuOsUA/R7PZciKklav2OC
    uKnIWNuoOGUO/JaTwghd7HeMMCPQyBjk4oCi4CPhujMVEkaN8/AuOdg47+ARRwXa
    27un05sZ+VrpnTdXI5LAO3MlGAhEP86921ZSDxItAt05TOiePOVQ5f3vszWQ8RPg
    qwIDAQAB
    -----END PUBLIC KEY-----
arborist:
  database:
    servername: "postgres-k8sgen3rmo.postgres.database.azure.com"
    username: "arborist_gen3dev_user"
    port: "5432"
    databasename: "arborist_db"
    db_password: "E98CF2-8DC7HGES"
  replicas: 1
  serviceport: 80
  image: "quay.io/cdis/arborist:2020.12"
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 128Mi
  service:
    type: ClusterIP
    port: 80

image:
  pullPolicy: IfNotPresent
  #pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: "registrypullsecret"
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "gen3dev"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: k8sgen3dev.optum.com
      paths: ["/(.*)"]
  tls:
    - secretName: k8sgen3dev-ingress-tls
      hosts:
        - k8sgen3dev.optum.com


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# tell revproxy where to find the certificates, relative to the template.
revproxy:
  replicas: 2
  serviceport: 80
  image: "quay.io/cdis/nginx:1.17.6-ctds-1.0.1"
  crtFile: "assets/gen3k8dev.crt"
  keyFile: "assets/gen3k8dev.npp.key"
  cacrtFile: "assets/gen3k8dev.cacrt"
  resources:
    limits:
      cpu: '100m'
      memory: '256Mi'
    requests:
      cpu: '50m'
      memory: '128Mi'

peregrine:
  image: "quay.io/cdis/peregrine:2020.12"
  database:
    servername: "postgres-k8sgen3rmo.postgres.database.azure.com"
    username: "peregrine_gen3dev_user"
    port: "5432"
    databasename: "metadata_db"
    db_password: "8ACB-0053084C2A97"
  serviceport: 80
  gdcapi_secret_key: "1JMWnHdApSGMJ8OIqA0IwWUEo8nJ1NJqwDQbjrz5L5v1QtW2ke"
  hmac_key: "1JMWnHdApSGMJ8OIqA0IwWUEo8nJ1NJqwDQbjrz5L5v1QtW2ke"
  bagitbucket: "noIdeaWhatThisIs"
  s3access: "notSureThisIsUsed"
  s3secret: "notSureThisIsUsed"
  schemas: assets/config_schemas.tar.gz.b64
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
tube:
  image: "quay.io/cdis/tube:2020.12"
  serviceport: 80
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  elastic:
    url: "https://gen3release-opendistro-es-client-service.gen3elastic.svc.cluster.local:9200"
    user: admin
    pass: admin

sheepdog:
  database:
    servername: "postgres-k8sgen3rmo.postgres.database.azure.com"
    username: "sheepdog_gen3dev_user"
    port: "5432"
    databasename: "metadata_db"
    db_password: "E24B9254-7019-4081"
  replicas: 1
  serviceport: 80
  image: "quay.io/cdis/sheepdog:2020.12"
  s3access: "notSureThisIsUsed"
  s3secret: "notSureThisIsUsed"
  schemas: assets/config_schemas.tar.gz.b64
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 80
indexd:
  database:
    servername: "postgres-k8sgen3rmo.postgres.database.azure.com"
    username: "indexd_gen3dev_user"
    port: "5432"
    databasename: "indexd_db"
    db_password: "D7E-2A715381173D"
  username: "indexd_client_gen3k8dev"
  password:  "indexd_client_pass_gen3k8dev"
  local_settings: "assets/indexd_settings.py"
  replicas: 1
  serviceport: 80
  image: "quay.io/cdis/indexd:2020.12"
  resources:
    limits:
      cpu: 1
      memory: "2000Mi"
    requests:
      cpu: "500m"
      memory: "1000Mi"
  service:
    type: "ClusterIP"
    port: 80
portal:
  replicas: 1
  serviceport: 80
  image: "quay.io/cdis/data-portal:2020.12"
  externalhostname: "gen3k8dev.optum.com"
  gitops: "assets/optum4c.png"
  gitopslogo: "assets/optum4c.png"
  resources:
    limits:
      cpu: '2000m'
      memory: '4096Mi'
    requests:
      cpu: '2000m'
      memory: '2048Mi'
pidgin:
  image: "quay.io/cdis/pidgin:2020.12"
  replicas: 1
  serviceport: 80
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
guppy:
  image: "quay.io/cdis/guppy:2020.12"
  replicas: 1
  serviceport: 80
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
jupyter:
  image: "dbedevreg.azurecr.io/jupyter-slim:optum02"
  replicas: 1
  serviceport: 8888
  userDirSize: "10Gi"
  resources:
    limits:
      cpu: 2000m
      memory: 4000Mi
    requests:
      cpu: 2000m
      memory: 3000Mi
