apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-{{ .Values.ENV }}
  labels:
    {{- include "gen3kubernetes.labels" . | nindent 4 }}
    component: "minio"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.minio.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gen3kubernetes.selectorLabels" . | nindent 6 }}
      component: "minio"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gen3kubernetes.selectorLabels" . | nindent 8 }}
        component: "minio"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gen3kubernetes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "minio-{{ .Values.ENV }}"
          env:
            - name: AZURE_STORAGE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  key: "AZURE_STORAGE_ACCOUNT"
                  name: minio-s3data-{{ .Values.ENV }}
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  key: "AZURE_STORAGE_KEY"
                  name: minio-s3data-{{ .Values.ENV }}
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  key: "MINIO_ROOT_USER"
                  name: minio-s3data-{{ .Values.ENV }}
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: "MINIO_ROOT_PASSWORD"
                  name: minio-s3data-{{ .Values.ENV }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.minio.image }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash" , "-c", "/usr/bin/minio gateway azure"]
          #command: ["sleep" , "60000000"]
          ports:
            - name: "http"
              containerPort: 80
              protocol: "TCP"
            - name: "otherport"
              containerPort: 9000
              protocol: "TCP"
          livenessProbe:
            httpGet:
              path: "/minio/health/live"
              port: "otherport"
              scheme: "HTTP"
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/minio/health/live"
              port: "otherport"
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
