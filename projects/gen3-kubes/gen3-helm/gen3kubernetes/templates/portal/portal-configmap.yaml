apiVersion: v1
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    {{- include "gen3kubernetes.labels" . | nindent 4 }}
    component: portal-configmap
  name: portal-config-configmap-{{ .Values.ENV }}
binaryData:
  gitops-logo.png: {{ .Files.Get  .Values.portal.gitopslogo  | b64enc }}


  gitops.png: {{ .Files.Get  .Values.portal.gitops  | b64enc  }}


data:
  waitForContainers.sh: |
    !/bin/bash
    # entrypoint script for data-portal to healthcheck sheepdog and peregrine to
    # make sure they are ready before dataportal attempts to get information from
    # them

    #move the setup files to proper destination..
    echo "Moving the setup files $(ls -l setup/)"
    cp setup/gitops.json data/config/gitops.json
    cp setup/gitops.png custom/createdby/gitops.png
    cp setup/gitops-logo.png custom/logo/gitops-logo.png

    until curl -f -s -o /dev/null http://service-sheepdog-{{ .Values.ENV }}/v0/submission/_dictionary/_all; do
        echo "sheepdog not ready, waiting..."
        sleep 5
    done

    until curl -f -s -o /dev/null http://service-peregrine-{{ .Values.ENV }}/v0/submission/getschema ; do
        echo "peregrine not ready, waiting..."
        sleep 5
    done

    echo "both services are ready"
    bash ./dockerStart.sh

  gitops.json: |
    {
      "gaTrackingId": "UA-119127212-1",
      "dataExplorerConfig": {
        "charts": {
          "project_id": {
            "chartType": "count",
            "title": "Projects"
          },
          "case_id": {
            "chartType": "count",
            "title": "Cases"
          },
          "gender": {
            "chartType": "pie",
            "title": "Gender"
          },
          "race": {
            "chartType": "bar",
            "title": "Race"
          }
        },
        "filters": {
          "tabs": [
            {
              "title": "Case",
              "fields":[
                "project_id",
                "gender",
                "race",
                "ethnicity"
              ]
            }
          ]
        },
        "table": {
          "enabled": false
        },
        "dropdowns": {},
        "buttons": [],
        "guppyConfig": {
          "dataType": "case",
          "nodeCountTitle": "Cases",
          "fieldMapping": [
            { "field": "disease_type", "name": "Disease type" },
            { "field": "primary_site", "name": "Site where samples were collected"}
          ],
          "manifestMapping": {
            "resourceIndexType": "file",
            "resourceIdField": "object_id",
            "referenceIdFieldInResourceIndex": "case_id",
            "referenceIdFieldInDataIndex": "node_id"
          },
          "accessibleFieldCheckList": ["case_id"],
          "accessibleValidationField": "case_id"
        }
      },
      "fileExplorerConfig": {
        "charts": {
          "data_type": {
            "chartType": "stackedBar",
            "title": "File Type"
          },
          "data_format": {
            "chartType": "stackedBar",
            "title": "File Format"
          }
        },
        "filters": {
          "tabs": [
            {
              "title": "File",
              "fields": [
                "project_id",
                "data_type",
                "data_format"
              ]
            }
          ]
        },
        "table": {
          "enabled": true,
          "fields": [
            "project_id",
            "file_name",
            "file_size",
            "object_id"
          ]
        },
        "dropdowns": {},
        "guppyConfig": {
          "dataType": "file",
          "fieldMapping": [
            { "field": "object_id", "name": "GUID" }
          ],
          "nodeCountTitle": "Files",
          "manifestMapping": {
            "resourceIndexType": "case",
            "resourceIdField": "case_id",
            "referenceIdFieldInResourceIndex": "object_id",
            "referenceIdFieldInDataIndex": "object_id"
          },
          "accessibleFieldCheckList": ["case_id"],
          "accessibleValidationField": "case_id",
          "downloadAccessor": "object_id"
        }
      }
    }
