apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: fence-users
    environment: {{ .Values.ENV }}
    {{- include "gen3kubernetes.labels" . | nindent 4 }}
  name: fence-users-configmap-{{ .Values.ENV }}
data:
  user.yaml: |
    authz:
      # policies automatically given to anyone, even if they are not authenticated
      anonymous_policies:
        - open_data_reader

      # policies automatically given to authenticated users (in addition to their other policies)
      all_users_policies: []

      # each group can contain multiple policies and multiple users
      groups:
        - name: 'adminUsers'
          policies:
            - 'optumdev02_creator'
            - 'optumdev02_reader'
            - 'data_upload'
            - 'workspace'
            - 'services.sheepdog-admin'
            - 'indexd_admin'
            - 'optumdev02_indexd_admin'
          projects:
            - auth_id: 'optumdev02'
              resource: '/programs/optumdev02/projects/optumprototype01'
              privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          users:
          {{- range .Values.fence.adminUsers }}
            - {{ . | quote }}
          {{- end }}
        - name: 'regularUsers'
          policies:
            - 'optumdev02_reader'
            - 'data_upload'
            - 'workspace'
          projects:
            - auth_id: 'optumdev02'
              resource: '/programs/optumdev02/projects/optumprototype01'
              privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          users:
          {{- range .Values.fence.regularUsers }}
            - {{ . | quote }}
          {{- end }}
      resources:
        - name: 'data_file'
          description: 'data files, stored in Azure or AWS S3'
        - name: 'programs'
          subresources:
            - name: 'optumdev02'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: 'optumprototype01'
            - name: QA
              subresources:
                - name: projects
                  subresources:
                    - name: test

        - name: 'workspace'
          description: 'jupyter notebooks'
        - name: 'services'
          subresources:
            - name: 'sheepdog'
              subresources:
                - name: 'submission'
                  subresources:
                    - name: 'program'
                    - name: 'project'
        - name: 'open'
      # each policy can contain multiple roles and multiple resources
      policies:
        - id: 'open_data_reader'
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths: ['/open']
        - id: 'optumdev02_creator'
          description: 'Full access to optumdev02'
          role_ids:
            - 'creator'
            - 'storage_reader'
            - 'indexd_admin'
          resource_paths: ['/programs/optumdev02','/programs/optumdev02/projects/optumprototype01']
        - id: 'optumdev02_reader'
          description: 'Read access to optumdev02'
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths: ['/programs/optumdev02','/programs/optumdev02/projects/optumprototype01']
        - id: 'optumdev02_indexd_admin'
          description: 'Admin access to optumdev02'
          role_ids:
            - 'indexd_admin'
          resource_paths: ['/programs/optumdev02','/programs/optumdev02/projects/optumprototype01']
        - id: 'indexd_admin'
          description: 'Admin access to all indexd'
          role_ids:
            - 'indexd_admin'
          resource_paths:
            - '/programs'
        - id: 'indexd_update'
          description: 'update access to all indexd'
          role_ids:
            - 'indexd_update'
          resource_paths:
            - '/programs'
        - id: 'data_upload'
          description: 'upload raw data files to blob storage'
          resource_paths: ['/data_file']
          role_ids: ['file_uploader']
        - id: 'workspace'
          description: 'be able to use workspace'
          resource_paths: ['/workspace']
          role_ids: ['workspace_user']
        - id: 'services.sheepdog-admin'
          description: 'CRUD access to programs and projects'
          role_ids:  ['sheepdog_admin']
          resource_paths:
            - '/services/sheepdog/submission/program'
            - '/services/sheepdog/submission/project'
            - '/programs'

      # currently existing methods are `read`, `create`, `update`,
      # `delete`, `read-storage` and `write-storage`
      roles:
        - id: 'reader'
          permissions:
            - id: 'reader'
              action:
                method: 'read'
                service: '*'
        - id: 'storage_reader'
          permissions:
            - id: 'storage_reader'
              action:
                method: 'read-storage'
                service: '*'
        - id: 'creator'
          permissions:
            - id: 'creator'
              action:
                method: 'create'
                service: '*'
        - id: 'indexd_admin'
          permissions:
            - id: 'indexd_admin'
              action:
                method: '*'
                service: 'indexd'
        - id: 'indexd_update'
          permissions:
            - id: 'update'
              action:
                method: '*'
                service: 'indexd'
        - id: 'file_uploader'
          description: 'can upload data files'
          permissions:
            - id: 'file_upload'
              action:
                service: '*'
                method: 'file_upload'
        - id: 'workspace_user'
          permissions:
            - id: 'workspace_access'
              action:
                method: 'access'
                service: 'jupyterhub'
        - id: 'sheepdog_admin'
          description: 'sheepdog admin role for program project crud'
          permissions:
            - id: 'sheepdog_admin_action'
              action:
                service: 'sheepdog'
                method: '*'

    users:
      {{- range .Values.fence.adminUsers }}
      {{ . | quote }}:
        admin: True
      {{- end }}
      {{- range .Values.fence.regularUsers }}
      {{ . | quote }}:
        admin: False
      {{- end }}
